Install the RubyFrontier.tmbundle file in the usual way. Place it in ~/Library/Application Support/TextMate/Bundles, or just double-click it and TextMate will install it.

=======

PREPARATION

You are expected (though not required) to have a "user.rb" file outside the bundle. Whenever a RubyFrontier command runs, the "user.rb" file is loaded after all of RubyFrontier's own code has loaded. Thus, "user.rb" is your opportunity to add to or customize RubyFrontier's behavior globally (as opposed to the many customizations you can have in a particular Web site folder). For example, this is where you implement glossary entries and outline renderers that you wish to have available in all your sites.

To set the location of this "user.rb" file, use the Locate User_rb File command. Your "user.rb" does not actually have to be called "user.rb", but it should be a Ruby file.

=======

DEPENDENCIES

RubyFrontier has been tested under Ruby 1.8.6. It probably works under 1.8.7. I would not expect it to work under 1.9.x yet.

RubyFrontier uses the "exifr" gem to get the dimensions of TIFF images. But you do not need to install the "exifr" gem immediately; RubyFrontier will mention its absence to you, but it will work just fine as long as your Web sites have no TIFF images.

=======

DOCUMENTATION

Drill down in RubyFrontier.tmbundle to Support/bin/RubyFrontier/longestJourney/docs/RubyFrontierDocumentation/default.txt. With the default.txt file selected, choose RubyFrontier > Publish Site. After a heart-stopping pause, the documentation Web site will be built in a new folder on your Desktop and the first page of the site will open in your browser. Read and enjoy. This documentation is identical to the documentation on the Web, here:

http://www.apeth.com/RubyFrontierDocs/default.html

=======

HISTORY

I started writing RubyFrontier in about January of 2008. It is very directly modelled after UserLand Frontier's Web framework. By about April of 2008 it was working well enough that I was maintaining my own Web sites with it. Then there was a long beta period where RubyFrontier was made available only to a small number of testers.

Initial public release, version 0.9, July 23, 2009. Quickly followed by 0.9.1 to handle the case where libxml wasn't installed on the users machines. Then there was some kerfuffle over escaping shell paths, which was settled by 0.9.4.

In version 0.9.5, LESS (http://lesscss.org/) support was added, and syntax for loading and linking to JavaScript files was extended in a manner parallel to that of CSS files, making it easy to specify a particular set of JavaScript files to be loaded and linked in a particular order.

In version 0.9.6, added a new optional filter stage, postMacroFilter.rb, which runs after macro processing but before the autoglossary mechanism, and is expected to modify adrPageTable[:postmacrotext]. Also, modified pagefooter() to work similarly to pageheader(): it returns an empty string initially, so there's nothing there up through autoglossary time, and then the result is appended to the end of the page after the same sort of thing is done for the pageHeader(). Also, fixed the bug where html.getOneDirective was not accepting a string argument.

In version 0.9.7, JavaScript material is now embeddable in the <head> area. Also, modified the behavior with respect to #images, #stylesheets, and #javascripts folders so that you can have as many as you like in the source folder and they will be written out into the rendered site. (The :imagefoldername directive is withdrawn and the :maxfilenamelength is no longer obeyed for JavaScript and stylesheet files.)

In version 0.9.8, added support for direct (calculated) templates; you can now insert the template as a string directly into the page table, instead of having to refer to a file on disk. Added support for embedding page at a legal <p> tag instead of the old <bodytext>. Added Publish Folder command. :maxfilenamelength is now completely withdrawn, since no one could possibly be using RubyFrontier on an old HFS file system.

In version 0.9.9, rejiggered the documentation so that it no longer uses Markdown and SmartyPants. Instead, the documentation now uses kramdown (http://kramdown.rubyforge.org/). This is faster and more predictable than using Markdown. Also, the CSS for the documentation uses LESS, and the template uses Haml (http://haml-lang.com/). Thus the documentation itself exemplifies a modern RubyFrontier site (plus, it builds much faster now).

In version 0.9.9.1, the model site (what you get when you say RubyFrontier > New Site) was rejiggered to demonstrate "modern" features such as use of kramdown, Haml, and LESS. The documentation also takes slightly better advantage of kramdown and Haml features.


=======

VERSION

This is version 0.9.9.2. Moved template-determination process forward so that adrPageTable[:template] is a correct Pathname by the time of the pageFilter. Rejiggered model site to match. Removed #nextprevs from model site as it was just getting in the way in new site.

=======

LICENSE

The RubyFrontier bundle for TextMate and all its code are released under the MIT license. See the file "LICENSE".

=======

AUTHOR

Matt Neuburg <matt@tidbits.com>

